<?php

/**
 * @file
 * Valghalla nemlogin module file.
 */

/**
 * Implements hook_menu().
 */
function valghalla_nemlogin_menu() {
  $items = array();
  $items['nemlogin/handlepost'] = array(
    'title' => 'Nemlogin handlepost',
    'page callback' => 'valghalla_nemlogin_handlepost',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/nemlogin'] = array(
    'title' => 'Valghalla Nemlogin',
    'description' => 'Valghalla Nemlogin configuration',
    'access arguments' => array('administer valghalla'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/nemlogin/config'] = array(
    'title' => 'Valghalla Nemlogin configuration',
    'description' => 'Configure Nemlogin',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('valghalla_nemlogin_settings_form'),
    'access arguments' => array('administer valghalla'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Form callback for settings.
 */
function valghalla_nemlogin_settings_form($form, &$form_state) {
  $form['valghalla_nemlogin_url'] = array(
    '#title' => t('Nemlogin service URL'),
    '#type' => 'textfield',
    '#description' => t('The URL of nemlogin service, e.g. https://nemlogin-test.kk.dk for test. NB! No trailing slahes'),
    '#default_value' => variable_get('valghalla_nemlogin_url', 'https://nemlogin-test.kk.dk'),
  );

  $form['valghalla_nemlogin_logout_redirect_url'] = array(
    '#title' => t('Logout redirect URL'),
    '#type' => 'textfield',
    '#description' => t('The URL to which user will be redirected after logggin out'),
    '#default_value' => variable_get('valghalla_nemlogin_logout_redirect_url', 'https://kk.dk'),
  );

  $form['valghalla_nemlogin_internal_ips'] = array(
    '#title' => t("Internal IP's of KK network"),
    '#type' => 'textfield',
    '#description' => t('Comma separated. Ex. 192.168.1.1,192.168.2.1'),
    '#default_value' => variable_get('valghalla_nemlogin_internal_ips'),
  );

  $form['valghalla_nemlogin_testing_outside_kk'] = array(
    '#title' => t('Make the solution work outside KK network (development/demo only)'),
    '#type' => 'checkbox',
    '#description' => t('Please have it turn off on any KK server'),
    '#default_value' => variable_get('valghalla_nemlogin_testing_outside_kk', FALSE),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_form_validate().
 */
function valghalla_nemlogin_settings_form_validate($form, &$form_state) {
  if (preg_match("/[^0-9.,]/", $form_state['values']['valghalla_nemlogin_internal_ips'])) {
    form_set_error('valghalla_nemlogin_internal_ips', 'Invalid format');
  }
}

/**
 * Implements hook_boot().
 */
function valghalla_nemlogin_boot() {
  // Do not run this from CLI.
  if (php_sapi_name() != 'cli') {
    require_once DRUPAL_ROOT . '/includes/common.inc';
    require_once DRUPAL_ROOT . '/includes/path.inc';

    $kkLogin = _valghalla_nemlogin_get_instance();
    $testing_outside_kk = variable_get('valghalla_nemlogin_testing_outside_kk', FALSE);

    // Is it logout request?
    if ($_COOKIE['valghalla_nemlogin_logout']) {
      setcookie('valghalla_nemlogin_logout', '', time() - 3600, '/');
      $kkLogin->logout();
      // Prevent from any further execution.
      die();
    }

    // Is anonymous user?
    if ($GLOBALS['user']->uid == 0) {
      $internal_ips = explode(',', variable_get('valghalla_nemlogin_internal_ips'));
      $remote_ip = ip_address();

      // Is external ip?
      if (!in_array($remote_ip, $internal_ips)) {
        // Runs only on non-kk network servers, allows getting the real SAMLID.
        if ($testing_outside_kk && !$kkLogin->haveCookie()) {
          $b64Url = base64_encode("https://domain.kk.dk/somePath/handleloginpost.php");
          $url = variable_get('valghalla_nemlogin_url', 'https://nemlogin-test.kk.dk') . '/nemlogin/login?callbackurl=' . $b64Url;

          $kkLogin->updateCookie("random-value");
          drupal_goto($url);
        }
        // Runs only on non-kk network servers, allows getting the real SAMLID
        // has sessionid and is logged in?
        if (!$kkLogin->isLoggedIn() && !$testing_outside_kk) {
          // Redirect to nemid login.
          drupal_goto($kkLogin->getLoginUrl());
        }
      }
    }
  }
}

/**
 * Helper function to check request.
 */
function valghalla_nemlogin_handlepost() {
  $kkLogin = _valghalla_nemlogin_get_instance();

  if (isset($_REQUEST['samlid'])) {
    $kkLogin->updateCookie($_REQUEST['samlid']);
  }
}

/**
 * Implements hook_user_logout().
 */
function valghalla_nemlogin_user_logout($account) {
  $kkLogin = _valghalla_nemlogin_get_instance();
  if ($kkLogin->haveCookie()) {
    setcookie('valghalla_nemlogin_logout', 1, time() + 3600 * 24, '/');
  }
  else {
    setcookie('valghalla_nemlogin_logout', '', time() - 3600, '/');
  }
}

/**
 * Implements hook_user_logout().
 */
function valghalla_nemlogin_user_login(&$edit, $account) {
  $kkLogin = _valghalla_nemlogin_get_instance();
  if ($kkLogin->haveCookie() && $kkLogin->isLoggedIn()) {
    $status = $kkLogin->getLoggedInStatus();
    watchdog('Valghalla nemlogin', 'User !username [uid: !uid] has logged in via Nemlogin using pid: !pid', array(
      '!username' => $account->name,
      '!uid' => $account->uid,
      '!pid' => $status->pid,
    ), WATCHDOG_DEBUG);
  }
}

/**
 * Factory for class instances.
 *
 * @return KkLogin
 *   Kklogin controller object.
 */
function _valghalla_nemlogin_get_instance() {
  $obj = & drupal_static(__FUNCTION__);
  if (is_object($obj)) {
    return $obj;
  }
  module_load_include('inc', 'valghalla_nemlogin', '/includes/KkLogin.class');
  $nemloginUrl = variable_get('valghalla_nemlogin_url', 'https://nemlogin-test.kk.dk');
  $logoutRedirectUrl = variable_get('valghalla_nemlogin_logout_redirect_url', 'https://kk.dk');
  return $obj = new KkLogin($nemloginUrl, $logoutRedirectUrl);
}
